libQgpsmm.so.LIBGPSSONAME libqgpsmmLIBGPSSONAME #MINVER#
#MISSING:" 3.12# (c++|optional)"gps_shm_close(gps_data_t*)@Base" 3.5
 gps_shm_close@Base 3.12
#MISSING:" 3.12# (c++|optional)"gps_shm_mainloop(gps_data_t*, int, void (*)(gps_data_t*))@Bas
 gps_shm_mainloop@Base 3.12
#MISSING:" 3.12# (c++|optional)"gps_shm_open(gps_data_t*)@Base" 3.5
 gps_shm_open@Base 3.12
#MISSING:" 3.12# (c++|optional)"gps_shm_read(gps_data_t*)@Base" 3.5
 gps_shm_read@Base 3.12
#MISSING:" 3.12# (c++|optional)"gps_shm_waiting(gps_data_t const*, int)@Base" 3.5
 gps_shm_waiting@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_close(gps_data_t*)@Base" 3.3
 gps_sock_close@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_data(gps_data_t const*)@Base" 3.3
 gps_sock_data@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_mainloop(gps_data_t*, int, void (*)(gps_data_t*))@Base" 3.3
 gps_sock_mainloop@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_open(char const*, char const*, gps_data_t*)@Base" 3.3
 gps_sock_open@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_read(gps_data_t*)@Base" 3.3
 gps_sock_read@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_send(gps_data_t*, char const*)@Base" 3.3
 gps_sock_send@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_stream(gps_data_t*, unsigned int, void*)@Base" 3.3
 gps_sock_stream@Base 3.12
#MISSING:" 3.12# (c++)"gps_sock_waiting(gps_data_t const*, int)@Base" 3.3
 gps_sock_waiting@Base 3.12
 (c++)"gpsmm::is_open()@Base" 3.10+dev1~
 (c++|optional)"QList<QString>::detach_helper(int)@Base" 3.3
 (c++)"gpsmm::enable_debug(int, _IO_FILE*)@Base" 3.3
 (c++)"gpsmm::gps_inner_open(char const*, char const*)@Base" 3.3
 (c++)"gpsmm::data()@Base" 3.3
 (c++)"gpsmm::read()@Base" 3.3
 (c++)"gpsmm::send(char const*)@Base" 3.3
 (c++)"gpsmm::stream(int)@Base" 3.3
 (c++)"gpsmm::waiting(int)@Base" 3.3
 (c++)"gpsmm::clear_fix()@Base" 3.3
 (c++)"gpsmm::~gpsmm()@Base" 3.3
 (c++)"gpsmm::~gpsmm()@Base" 3.3
 (c++)"gpsmm::~gpsmm()@Base" 3.3
 (c++|optional)"QDebug::~QDebug()@Base" 3.3
 (c++|optional)"QDebug::~QDebug()@Base" 3.3
 (c++|optional)"QString::~QString()@Base" 3.3
 (c++|optional)"QString::~QString()@Base" 3.3
 (c++|optional)"QList<QString>::~QList()@Base" 3.5
 (c++|optional)"QList<QString>::~QList()@Base" 3.5
 (c++)"typeinfo for gpsmm@Base" 3.3
 (c++)"typeinfo name for gpsmm@Base" 3.3
 (c++)"vtable for gpsmm@Base" 3.3
 (c++|optional)"QByteArray::~QByteArray()@Base" 3.3
 (c++|optional)"QByteArray::~QByteArray()@Base" 3.3
 (c++)"shiftleft(unsigned char*, int, unsigned short)@Base" 3.12
#MISSING: 3.17# (c++)"shm_get(int, bool, bool)@Base" 3.15
#MISSING: 3.17# (c++)"ntp_name(int)@Base" 3.15
#MISSING: 3.17# (c++)"ntp_read(shmTime*, shm_stat_t*, bool)@Base" 3.15
#MISSING: 3.17# (c++)"ntp_write(shmTime volatile*, timedelta_t*, int, int)@Base" 3.15
 os_daemon@Base 3.17
 (c++)"deg_to_str(deg_str_type, double)@Base" 3.5
 (c++)"export_default()@Base" 3.5
 (c++)"export_list(_IO_FILE*)@Base" 3.5
 (c++)"export_lookup(char const*)@Base" 3.5
#MISSING: 3.12# (c++)"gps_dbus_mainloop(gps_data_t*, int, void (*)(gps_data_t*))@Base" 3.5
 gps_dbus_mainloop@Base 3.12
#MISSING: 3.12# (c++)"gps_dbus_open(gps_data_t*)@Base" 3.5
 gps_dbus_open@Base 3.12
#MISSING: 3.12# (c++|optional)"gpsd_hexdump(char*, unsigned int)@Base" 3.5
#MISSING: 3.12# (c++|optional)"gpsd_hexdump(char*, unsigned int, char*, unsigned int)@Base" 3.10
#MISSING: 3.12# (c++|optional)"gpsd_hexdump(char*, unsigned long)@Base" 3.5
#MISSING: 3.12# (c++|optional)"gpsd_hexdump(char*, unsigned long, char*, unsigned long)@Base" 3.10
 (c++)"gpsd_source_spec(char const*, fixsource_t*)@Base" 3.5
 (c++)"gpsd_units()@Base" 3.5
#MISSING: 3.11-1# (c++)"libgps_dump_state(gps_data_t*)@Base" 3.5
 libgps_dump_state@Base 3.11
 (c++)"maidenhead(double, double)@Base" 3.5
 (c++)"true2magnetic(double, double, double)@Base" 3.5
#MISSING: 3.12# (c++|optional)"gpsd_packetdump(char*, unsigned int)@Base" 3.9
#MISSING: 3.12# (c++|optional)"gpsd_packetdump(char*, unsigned int, char*, unsigned int)@Base" 3.10
#MISSING: 3.12# (c++|optional)"gpsd_packetdump(char*, unsigned long)@Base" 3.9
#MISSING: 3.12# (c++|optional)"gpsd_packetdump(char*, unsigned long, char*, unsigned long)@Base" 3.10
 gpsd_packetdump@Base 3.11
 (c++)"sbits(signed char*, unsigned int, unsigned int, bool)@Base" 3.9
 (c++)"ubits(unsigned char*, unsigned int, unsigned int, bool)@Base" 3.9
 (c++)"getbed64(char const*, int)@Base" 3.9
 (c++)"getbef32(char const*, int)@Base" 3.9
 (c++)"getled64(char const*, int)@Base" 3.9
 (c++)"getlef32(char const*, int)@Base" 3.9
 (c++)"putbef32(char*, int, float)@Base" 3.9
#MISSING: 3.5-1# deg_to_str@Base 3.3
 earth_distance@Base 3.3
 earth_distance_and_bearings@Base 3.3
#MISSING: 3.5-1# export_default@Base 3.3
#MISSING: 3.5-1# export_list@Base 3.3
#MISSING: 3.5-1# export_lookup@Base 3.3
 gps_clear_dop@Base 3.3
 gps_clear_fix@Base 3.3
 gps_close@Base 3.3
 gps_data@Base 3.3
 gps_enable_debug@Base 3.3
 gps_errstr@Base 3.3
 gps_mainloop@Base 3.3
 gps_maskdump@Base 3.3
 gps_merge_fix@Base 3.3
 gps_open@Base 3.3
 gps_read@Base 3.3
 gps_send@Base 3.3
 gps_stream@Base 3.3
 gps_unpack@Base 3.3
 gps_waiting@Base 3.3
 gpsd_hexdump@Base 3.12
 gpsd_hexpack@Base 3.3
#MISSING: 3.5-1# gpsd_source_spec@Base 3.3
#MISSING: 3.5-1# gpsd_units@Base 3.3
#MISSING: 3.11-1# (c++)"hex_escapes(char*, char const*)@Base" 3.5
 hex_escapes@Base 3.11
 iso8601_to_unix@Base 3.3
 json_ais_read@Base 3.3
 json_device_read@Base 3.3
 json_enable_debug@Base 3.3
 json_error_string@Base 3.3
 json_oscillator_read@Base 3.17
 json_pps_read@Base 3.10
 json_read_array@Base 3.3
 json_read_object@Base 3.3
 json_rtcm2_read@Base 3.3
 json_rtcm3_read@Base 3.10
 json_toff_read@Base 3.15
 json_watch_read@Base 3.3
 libgps_debuglevel@Base 3.3
 libgps_json_unpack@Base 3.3
 libgps_trace@Base 3.3
#MISSING: 3.5-1# maidenhead@Base 3.3
 mkgmtime@Base 3.3
 netlib_connectsock@Base 3.11
 netlib_errstr@Base 3.11
 netlib_localsocket@Base 3.11
 netlib_sock2ip@Base 3.11
#MISSING: 3.11-1# (c++)"netlib_connectsock(int, char const*, char const*, char const*)@Base" 3.5
#MISSING: 3.11-1# (c++)"netlib_errstr(int)@Base" 3.5
#MISSING: 3.11-1# (c++)"netlib_localsocket(char const*, int)@Base" 3.5
#MISSING: 3.11-1# (c++)"netlib_sock2ip(int)@Base" 3.5
 safe_atof@Base 3.3
 strlcat@Base 3.3
 strlcpy@Base 3.3
#MISSING: 3.15 timespec_str@Base 3.12
 timestamp@Base 3.3
#MISSING: 3.5-1# true2magnetic@Base 3.3
 unix_to_iso8601@Base 3.3
