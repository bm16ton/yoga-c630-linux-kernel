#!/bin/sh
#
# gpsd Service daemon for mediating access to a GPS
#
# chkconfig:   - 44 66
# description: gpsd is a service daemon that mediates access to a GPS sensor \
#              connected to the host computer by serial or USB interface, \
#              making its data on the location/course/velocity of the sensor \
#              available to be queried on TCP port 2947 of the host computer.
# processname: gpsd
# pidfile:     /var/run/gpsd.pid

# http://fedoraproject.org/wiki/FCNewInit/Initscripts
### BEGIN INIT INFO
# Provides: gpsd
# Required-Start: network
# Required-Stop: network
# Should-Start: 
# Should-Stop: 
# Default-Start: 
# Default-Stop: 
# Short-Description: Service daemon for mediating access to a GPS
# Description: gpsd is a service daemon that mediates access to a GPS sensor
#	connected to the host computer by serial or USB interface, making its
#	data on the location/course/velocity of the sensor available to be
#	queried on TCP port 2947 of the host computer.
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/sbin/gpsd"
prog=$(basename $exec)
PIDFILE=/var/run/gpsd.pid
CONTROL_SOCKET=/var/run/gpsd.sock

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
    [ "$EUID" != "0" ] && exit 4
    echo -n $"Starting $prog: "
    daemon $exec -P $PIDFILE -F $CONTROL_SOCKET $OPTIONS $DEVICE
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    [ "$EUID" != "0" ] && exit 4
    echo -n $"Stopping $prog: "
    killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

case "$1" in
    start|stop|restart)
        $1
        ;;
    force-reload)
        restart
        ;;
    status)
        status $prog
        ;;
    try-restart|condrestart)
        if status $prog >/dev/null ; then
            restart
        fi
	;;
    reload)
        status $prog >/dev/null || exit 7
        # If config can be reloaded without restarting, implement it here,
        # remove the "exit", and add "reload" to the usage message below.
        action $"Service $prog does not support the reload action: " /bin/false
        exit 3
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
        exit 2
esac
