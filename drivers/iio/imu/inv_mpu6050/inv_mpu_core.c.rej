--- drivers/iio/imu/inv_mpu6050/inv_mpu_core.c
+++ drivers/iio/imu/inv_mpu6050/inv_mpu_core.c
@@ -1455,30 +1455,30 @@ int inv_mpu_core_probe(struct regmap *regmap, int irq, const char *name,
 	}
 //16ton
 	if (!inv_mpu6050_noirq) {
-	desc = irq_get_irq_data(irq);
-	if (!desc) {
+	    desc = irq_get_irq_data(irq);
+	    if (!desc) {
 		dev_err(dev, "Could not find IRQ %d\n", irq);
 		return -EINVAL;
-	}
-
-	irq_type = irqd_get_trigger_type(desc);
-	if (!irq_type)
-		irq_type = IRQF_TRIGGER_RISING;
-	if (irq_type & IRQF_TRIGGER_RISING)	// rising or both-edge
-		st->irq_mask = INV_MPU6050_ACTIVE_HIGH;
-	else if (irq_type == IRQF_TRIGGER_FALLING)
-		st->irq_mask = INV_MPU6050_ACTIVE_LOW;
-	else if (irq_type == IRQF_TRIGGER_HIGH)
-		st->irq_mask = INV_MPU6050_ACTIVE_HIGH |
-			INV_MPU6050_LATCH_INT_EN;
-	else if (irq_type == IRQF_TRIGGER_LOW)
-		st->irq_mask = INV_MPU6050_ACTIVE_LOW |
-			INV_MPU6050_LATCH_INT_EN;
-	else {
-		dev_err(dev, "Invalid interrupt type 0x%x specified\n",
-			irq_type);
-		return -EINVAL;
-	}
+	    }
+
+	    irq_type = irqd_get_trigger_type(desc);
+	    if (!irq_type)
+	    	irq_type = IRQF_TRIGGER_RISING;
+	    if (irq_type & IRQF_TRIGGER_RISING)	// rising or both-edge
+	    	st->irq_mask = INV_MPU6050_ACTIVE_HIGH;
+	    else if (irq_type == IRQF_TRIGGER_FALLING)
+	    	st->irq_mask = INV_MPU6050_ACTIVE_LOW;
+	    else if (irq_type == IRQF_TRIGGER_HIGH)
+	    	st->irq_mask = INV_MPU6050_ACTIVE_HIGH |
+	    		INV_MPU6050_LATCH_INT_EN;
+	    else if (irq_type == IRQF_TRIGGER_LOW)
+	    	st->irq_mask = INV_MPU6050_ACTIVE_LOW |
+	    		INV_MPU6050_LATCH_INT_EN;
+	    else {
+	    	dev_err(dev, "Invalid interrupt type 0x%x specified\n",
+	    		irq_type);
+	    	return -EINVAL;
+	  }
     }
 //16ton
 	st->vdd_supply = devm_regulator_get(dev, "vdd");
