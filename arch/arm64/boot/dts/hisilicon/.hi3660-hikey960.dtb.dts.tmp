# 1 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts"
# 9 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts"
/dts-v1/;

# 1 "arch/arm64/boot/dts/hisilicon/hi3660.dtsi" 1







# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 1
# 9 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h"
# 1 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/irq.h" 1
# 10 "./scripts/dtc/include-prefixes/dt-bindings/interrupt-controller/arm-gic.h" 2
# 9 "arch/arm64/boot/dts/hisilicon/hi3660.dtsi" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/clock/hi3660-clock.h" 1
# 10 "arch/arm64/boot/dts/hisilicon/hi3660.dtsi" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/thermal/thermal.h" 1
# 11 "arch/arm64/boot/dts/hisilicon/hi3660.dtsi" 2

/ {
 compatible = "hisilicon,hi3660";
 interrupt-parent = <&gic>;
 #address-cells = <2>;
 #size-cells = <2>;

 psci {
  compatible = "arm,psci-0.2";
  method = "smc";
 };

 cpus {
  #address-cells = <2>;
  #size-cells = <0>;

  cpu-map {
   cluster0 {
    core0 {
     cpu = <&cpu0>;
    };
    core1 {
     cpu = <&cpu1>;
    };
    core2 {
     cpu = <&cpu2>;
    };
    core3 {
     cpu = <&cpu3>;
    };
   };
   cluster1 {
    core0 {
     cpu = <&cpu4>;
    };
    core1 {
     cpu = <&cpu5>;
    };
    core2 {
     cpu = <&cpu6>;
    };
    core3 {
     cpu = <&cpu7>;
    };
   };
  };

  cpu0: cpu@0 {
   compatible = "arm,cortex-a53";
   device_type = "cpu";
   reg = <0x0 0x0>;
   enable-method = "psci";
   next-level-cache = <&A53_L2>;
   cpu-idle-states = <&CPU_SLEEP_0 &CLUSTER_SLEEP_0>;
   capacity-dmips-mhz = <592>;
   clocks = <&stub_clock 0>;
   operating-points-v2 = <&cluster0_opp>;
   #cooling-cells = <2>;
   dynamic-power-coefficient = <110>;
  };

  cpu1: cpu@1 {
   compatible = "arm,cortex-a53";
   device_type = "cpu";
   reg = <0x0 0x1>;
   enable-method = "psci";
   next-level-cache = <&A53_L2>;
   cpu-idle-states = <&CPU_SLEEP_0 &CLUSTER_SLEEP_0>;
   capacity-dmips-mhz = <592>;
   clocks = <&stub_clock 0>;
   operating-points-v2 = <&cluster0_opp>;
   #cooling-cells = <2>;
  };

  cpu2: cpu@2 {
   compatible = "arm,cortex-a53";
   device_type = "cpu";
   reg = <0x0 0x2>;
   enable-method = "psci";
   next-level-cache = <&A53_L2>;
   cpu-idle-states = <&CPU_SLEEP_0 &CLUSTER_SLEEP_0>;
   capacity-dmips-mhz = <592>;
   clocks = <&stub_clock 0>;
   operating-points-v2 = <&cluster0_opp>;
   #cooling-cells = <2>;
  };

  cpu3: cpu@3 {
   compatible = "arm,cortex-a53";
   device_type = "cpu";
   reg = <0x0 0x3>;
   enable-method = "psci";
   next-level-cache = <&A53_L2>;
   cpu-idle-states = <&CPU_SLEEP_0 &CLUSTER_SLEEP_0>;
   capacity-dmips-mhz = <592>;
   clocks = <&stub_clock 0>;
   operating-points-v2 = <&cluster0_opp>;
   #cooling-cells = <2>;
  };

  cpu4: cpu@100 {
   compatible = "arm,cortex-a73";
   device_type = "cpu";
   reg = <0x0 0x100>;
   enable-method = "psci";
   next-level-cache = <&A73_L2>;
   cpu-idle-states = <&CPU_SLEEP_1 &CLUSTER_SLEEP_1>;
   capacity-dmips-mhz = <1024>;
   clocks = <&stub_clock 1>;
   operating-points-v2 = <&cluster1_opp>;
   #cooling-cells = <2>;
   dynamic-power-coefficient = <550>;
  };

  cpu5: cpu@101 {
   compatible = "arm,cortex-a73";
   device_type = "cpu";
   reg = <0x0 0x101>;
   enable-method = "psci";
   next-level-cache = <&A73_L2>;
   cpu-idle-states = <&CPU_SLEEP_1 &CLUSTER_SLEEP_1>;
   capacity-dmips-mhz = <1024>;
   clocks = <&stub_clock 1>;
   operating-points-v2 = <&cluster1_opp>;
   #cooling-cells = <2>;
  };

  cpu6: cpu@102 {
   compatible = "arm,cortex-a73";
   device_type = "cpu";
   reg = <0x0 0x102>;
   enable-method = "psci";
   next-level-cache = <&A73_L2>;
   cpu-idle-states = <&CPU_SLEEP_1 &CLUSTER_SLEEP_1>;
   capacity-dmips-mhz = <1024>;
   clocks = <&stub_clock 1>;
   operating-points-v2 = <&cluster1_opp>;
   #cooling-cells = <2>;
  };

  cpu7: cpu@103 {
   compatible = "arm,cortex-a73";
   device_type = "cpu";
   reg = <0x0 0x103>;
   enable-method = "psci";
   next-level-cache = <&A73_L2>;
   cpu-idle-states = <&CPU_SLEEP_1 &CLUSTER_SLEEP_1>;
   capacity-dmips-mhz = <1024>;
   clocks = <&stub_clock 1>;
   operating-points-v2 = <&cluster1_opp>;
   #cooling-cells = <2>;
  };

  idle-states {
   entry-method = "psci";

   CPU_SLEEP_0: cpu-sleep-0 {
    compatible = "arm,idle-state";
    local-timer-stop;
    arm,psci-suspend-param = <0x0010000>;
    entry-latency-us = <400>;
    exit-latency-us = <650>;
    min-residency-us = <1500>;
   };
   CLUSTER_SLEEP_0: cluster-sleep-0 {
    compatible = "arm,idle-state";
    local-timer-stop;
    arm,psci-suspend-param = <0x1010000>;
    entry-latency-us = <500>;
    exit-latency-us = <1600>;
    min-residency-us = <3500>;
   };


   CPU_SLEEP_1: cpu-sleep-1 {
    compatible = "arm,idle-state";
    local-timer-stop;
    arm,psci-suspend-param = <0x0010000>;
    entry-latency-us = <400>;
    exit-latency-us = <550>;
    min-residency-us = <1500>;
   };

   CLUSTER_SLEEP_1: cluster-sleep-1 {
    compatible = "arm,idle-state";
    local-timer-stop;
    arm,psci-suspend-param = <0x1010000>;
    entry-latency-us = <800>;
    exit-latency-us = <2900>;
    min-residency-us = <3500>;
   };
  };

  A53_L2: l2-cache0 {
   compatible = "cache";
  };

  A73_L2: l2-cache1 {
   compatible = "cache";
  };
 };

 cluster0_opp: opp-table-0 {
  compatible = "operating-points-v2";
  opp-shared;

  opp00 {
   opp-hz = /bits/ 64 <533000000>;
   opp-microvolt = <700000>;
   clock-latency-ns = <300000>;
  };

  opp01 {
   opp-hz = /bits/ 64 <999000000>;
   opp-microvolt = <800000>;
   clock-latency-ns = <300000>;
  };

  opp02 {
   opp-hz = /bits/ 64 <1402000000>;
   opp-microvolt = <900000>;
   clock-latency-ns = <300000>;
  };

  opp03 {
   opp-hz = /bits/ 64 <1709000000>;
   opp-microvolt = <1000000>;
   clock-latency-ns = <300000>;
  };

  opp04 {
   opp-hz = /bits/ 64 <1844000000>;
   opp-microvolt = <1100000>;
   clock-latency-ns = <300000>;
  };
 };

 cluster1_opp: opp-table-1 {
  compatible = "operating-points-v2";
  opp-shared;

  opp10 {
   opp-hz = /bits/ 64 <903000000>;
   opp-microvolt = <700000>;
   clock-latency-ns = <300000>;
  };

  opp11 {
   opp-hz = /bits/ 64 <1421000000>;
   opp-microvolt = <800000>;
   clock-latency-ns = <300000>;
  };

  opp12 {
   opp-hz = /bits/ 64 <1805000000>;
   opp-microvolt = <900000>;
   clock-latency-ns = <300000>;
  };

  opp13 {
   opp-hz = /bits/ 64 <2112000000>;
   opp-microvolt = <1000000>;
   clock-latency-ns = <300000>;
  };

  opp14 {
   opp-hz = /bits/ 64 <2362000000>;
   opp-microvolt = <1100000>;
   clock-latency-ns = <300000>;
  };
 };

 gic: interrupt-controller@e82b0000 {
  compatible = "arm,gic-400";
  reg = <0x0 0xe82b1000 0 0x1000>,
        <0x0 0xe82b2000 0 0x2000>,
        <0x0 0xe82b4000 0 0x2000>,
        <0x0 0xe82b6000 0 0x2000>;
  #address-cells = <0>;
  #interrupt-cells = <3>;
  interrupt-controller;
  interrupts = <1 9 ((((1 << (8)) - 1) << 8) |
      4)>;
 };

 a53-pmu {
  compatible = "arm,cortex-a53-pmu";
  interrupts = <0 24 4>,
        <0 25 4>,
        <0 26 4>,
        <0 27 4>;
  interrupt-affinity = <&cpu0>,
         <&cpu1>,
         <&cpu2>,
         <&cpu3>;
 };

 a73-pmu {
  compatible = "arm,cortex-a73-pmu";
  interrupts = <0 2 4>,
        <0 3 4>,
        <0 4 4>,
        <0 5 4>;
  interrupt-affinity = <&cpu4>,
         <&cpu5>,
         <&cpu6>,
         <&cpu7>;
 };

 timer {
  compatible = "arm,armv8-timer";
  interrupt-parent = <&gic>;
  interrupts = <1 13 ((((1 << (8)) - 1) << 8) |
       8)>,
        <1 14 ((((1 << (8)) - 1) << 8) |
       8)>,
        <1 11 ((((1 << (8)) - 1) << 8) |
       8)>,
        <1 10 ((((1 << (8)) - 1) << 8) |
       8)>;
 };

 soc {
  compatible = "simple-bus";
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  crg_ctrl: crg_ctrl@fff35000 {
   compatible = "hisilicon,hi3660-crgctrl", "syscon";
   reg = <0x0 0xfff35000 0x0 0x1000>;
   #clock-cells = <1>;
  };

  crg_rst: crg_rst_controller {
   compatible = "hisilicon,hi3660-reset";
   #reset-cells = <2>;
   hisi,rst-syscon = <&crg_ctrl>;
  };


  pctrl: pctrl@e8a09000 {
   compatible = "hisilicon,hi3660-pctrl", "syscon";
   reg = <0x0 0xe8a09000 0x0 0x2000>;
   #clock-cells = <1>;
  };

  pmuctrl: crg_ctrl@fff34000 {
   compatible = "hisilicon,hi3660-pmuctrl", "syscon";
   reg = <0x0 0xfff34000 0x0 0x1000>;
   #clock-cells = <1>;
  };

  sctrl: sctrl@fff0a000 {
   compatible = "hisilicon,hi3660-sctrl", "syscon";
   reg = <0x0 0xfff0a000 0x0 0x1000>;
   #clock-cells = <1>;
  };

  iomcu: iomcu@ffd7e000 {
   compatible = "hisilicon,hi3660-iomcu", "syscon";
   reg = <0x0 0xffd7e000 0x0 0x1000>;
   #clock-cells = <1>;

  };

  iomcu_rst: reset {
   compatible = "hisilicon,hi3660-reset";
   hisi,rst-syscon = <&iomcu>;
   #reset-cells = <2>;
  };

  mailbox: mailbox@e896b000 {
   compatible = "hisilicon,hi3660-mbox";
   reg = <0x0 0xe896b000 0x0 0x1000>;
   interrupts = <0 192 4>,
         <0 193 4>;
   #mbox-cells = <3>;
  };

  stub_clock: stub_clock@e896b500 {
   compatible = "hisilicon,hi3660-stub-clk";
   reg = <0x0 0xe896b500 0x0 0x0100>;
   #clock-cells = <1>;
   mboxes = <&mailbox 13 3 0>;
  };

  dual_timer0: timer@fff14000 {
   compatible = "arm,sp804", "arm,primecell";
   reg = <0x0 0xfff14000 0x0 0x1000>;
   interrupts = <0 48 4>,
         <0 49 4>;
   clocks = <&crg_ctrl 11>,
     <&crg_ctrl 11>,
     <&crg_ctrl 11>;
   clock-names = "timer1", "timer2", "apb_pclk";
  };

  i2c0: i2c@ffd71000 {
   compatible = "snps,designware-i2c";
   reg = <0x0 0xffd71000 0x0 0x1000>;
   interrupts = <0 118 4>;
   #address-cells = <1>;
   #size-cells = <0>;
   clock-frequency = <400000>;
   clocks = <&crg_ctrl 17>;
   resets = <&iomcu_rst 0x20 3>;
   pinctrl-names = "default";
   pinctrl-0 = <&i2c0_pmx_func &i2c0_cfg_func>;
   status = "disabled";
  };

  i2c1: i2c@ffd72000 {
   compatible = "snps,designware-i2c";
   reg = <0x0 0xffd72000 0x0 0x1000>;
   interrupts = <0 119 4>;
   #address-cells = <1>;
   #size-cells = <0>;
   clock-frequency = <400000>;
   clocks = <&crg_ctrl 18>;
   resets = <&iomcu_rst 0x20 4>;
   pinctrl-names = "default";
   pinctrl-0 = <&i2c1_pmx_func &i2c1_cfg_func>;
   status = "disabled";
  };

  i2c3: i2c@fdf0c000 {
   compatible = "snps,designware-i2c";
   reg = <0x0 0xfdf0c000 0x0 0x1000>;
   interrupts = <0 81 4>;
   #address-cells = <1>;
   #size-cells = <0>;
   clock-frequency = <400000>;
   clocks = <&crg_ctrl 55>;
   resets = <&crg_rst 0x78 7>;
   pinctrl-names = "default";
   pinctrl-0 = <&i2c3_pmx_func &i2c3_cfg_func>;
   status = "disabled";
  };

  i2c7: i2c@fdf0b000 {
   compatible = "snps,designware-i2c";
   reg = <0x0 0xfdf0b000 0x0 0x1000>;
   interrupts = <0 314 4>;
   #address-cells = <1>;
   #size-cells = <0>;
   clock-frequency = <400000>;
   clocks = <&crg_ctrl 54>;
   resets = <&crg_rst 0x60 14>;
   pinctrl-names = "default";
   pinctrl-0 = <&i2c7_pmx_func &i2c7_cfg_func>;
   status = "disabled";
  };

  uart0: serial@fdf02000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfdf02000 0x0 0x1000>;
   interrupts = <0 74 4>;
   clocks = <&crg_ctrl 104>,
     <&crg_ctrl 8>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart0_pmx_func &uart0_cfg_func>;
   status = "disabled";
  };

  uart1: serial@fdf00000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfdf00000 0x0 0x1000>;
   interrupts = <0 75 4>;
   dma-names = "rx", "tx";
   dmas = <&dma0 2 &dma0 3>;
   clocks = <&crg_ctrl 57>,
     <&crg_ctrl 57>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart1_pmx_func &uart1_cfg_func>;
   status = "disabled";
  };

  uart2: serial@fdf03000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfdf03000 0x0 0x1000>;
   interrupts = <0 76 4>;
   dma-names = "rx", "tx";
   dmas = <&dma0 4 &dma0 5>;
   clocks = <&crg_ctrl 58>,
     <&crg_ctrl 8>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart2_pmx_func &uart2_cfg_func>;
   status = "disabled";
  };

  uart3: serial@ffd74000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xffd74000 0x0 0x1000>;
   interrupts = <0 114 4>;
   clocks = <&crg_ctrl 15>,
     <&crg_ctrl 8>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart3_pmx_func &uart3_cfg_func>;
   status = "disabled";
  };

  uart4: serial@fdf01000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfdf01000 0x0 0x1000>;
   interrupts = <0 77 4>;
   dma-names = "rx", "tx";
   dmas = <&dma0 6 &dma0 7>;
   clocks = <&crg_ctrl 59>,
     <&crg_ctrl 59>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart4_pmx_func &uart4_cfg_func>;
   status = "disabled";
  };

  uart5: serial@fdf05000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfdf05000 0x0 0x1000>;
   interrupts = <0 78 4>;
   dma-names = "rx", "tx";
   dmas = <&dma0 8 &dma0 9>;
   clocks = <&crg_ctrl 60>,
     <&crg_ctrl 60>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart5_pmx_func &uart5_cfg_func>;
   status = "disabled";
  };

  uart6: serial@fff32000 {
   compatible = "arm,pl011", "arm,primecell";
   reg = <0x0 0xfff32000 0x0 0x1000>;
   interrupts = <0 79 4>;
   clocks = <&crg_ctrl 10>,
     <&crg_ctrl 8>;
   clock-names = "uartclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&uart6_pmx_func &uart6_cfg_func>;
   status = "disabled";
  };

  dma0: dma@fdf30000 {
   compatible = "hisilicon,k3-dma-1.0";
   reg = <0x0 0xfdf30000 0x0 0x1000>;
   #dma-cells = <1>;
   dma-channels = <16>;
   dma-requests = <32>;
   dma-channel-mask = <0xfffe>;
   interrupts = <0 143 4>;
   clocks = <&crg_ctrl 62>;
   dma-no-cci;
   dma-type = "hi3660_dma";
  };

  asp_dmac: dma-controller@e804b000 {
   compatible = "hisilicon,hisi-pcm-asp-dma-1.0";
   reg = <0x0 0xe804b000 0x0 0x1000>;
   #dma-cells = <1>;
   dma-channels = <16>;
   dma-requests = <32>;
   interrupts = <0 216 4>;
   interrupt-names = "asp_dma_irq";
  };

  rtc0: rtc@fff04000 {
   compatible = "arm,pl031", "arm,primecell";
   reg = <0x0 0Xfff04000 0x0 0x1000>;
   interrupts = <0 46 4>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
  };

  gpio0: gpio@e8a0b000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a0b000 0 0x1000>;
   interrupts = <0 84 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 1 0 7>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 31>;
   clock-names = "apb_pclk";
  };

  gpio1: gpio@e8a0c000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a0c000 0 0x1000>;
   interrupts = <0 85 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 1 7 7>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 32>;
   clock-names = "apb_pclk";
  };

  gpio2: gpio@e8a0d000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a0d000 0 0x1000>;
   interrupts = <0 86 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 14 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 33>;
   clock-names = "apb_pclk";
  };

  gpio3: gpio@e8a0e000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a0e000 0 0x1000>;
   interrupts = <0 87 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 22 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 34>;
   clock-names = "apb_pclk";
  };

  gpio4: gpio@e8a0f000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a0f000 0 0x1000>;
   interrupts = <0 88 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 30 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 35>;
   clock-names = "apb_pclk";
  };

  gpio5: gpio@e8a10000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a10000 0 0x1000>;
   interrupts = <0 89 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 38 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 36>;
   clock-names = "apb_pclk";
  };

  gpio6: gpio@e8a11000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a11000 0 0x1000>;
   interrupts = <0 90 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 46 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 37>;
   clock-names = "apb_pclk";
  };

  gpio7: gpio@e8a12000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a12000 0 0x1000>;
   interrupts = <0 91 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 54 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 38>;
   clock-names = "apb_pclk";
  };

  gpio8: gpio@e8a13000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a13000 0 0x1000>;
   interrupts = <0 92 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 62 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 39>;
   clock-names = "apb_pclk";
  };

  gpio9: gpio@e8a14000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a14000 0 0x1000>;
   interrupts = <0 93 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 70 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 40>;
   clock-names = "apb_pclk";
  };

  gpio10: gpio@e8a15000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a15000 0 0x1000>;
   interrupts = <0 94 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 78 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 41>;
   clock-names = "apb_pclk";
  };

  gpio11: gpio@e8a16000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a16000 0 0x1000>;
   interrupts = <0 95 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 86 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 42>;
   clock-names = "apb_pclk";
  };

  gpio12: gpio@e8a17000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a17000 0 0x1000>;
   interrupts = <0 96 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 94 3 &pmx0 7 101 1>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 43>;
   clock-names = "apb_pclk";
  };

  gpio13: gpio@e8a18000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a18000 0 0x1000>;
   interrupts = <0 97 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 102 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 44>;
   clock-names = "apb_pclk";
  };

  gpio14: gpio@e8a19000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a19000 0 0x1000>;
   interrupts = <0 98 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 110 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 45>;
   clock-names = "apb_pclk";
  };

  gpio15: gpio@e8a1a000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a1a000 0 0x1000>;
   interrupts = <0 99 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx0 0 118 6>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 46>;
   clock-names = "apb_pclk";
  };

  gpio16: gpio@e8a1b000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a1b000 0 0x1000>;
   interrupts = <0 100 4>;
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 47>;
   clock-names = "apb_pclk";
  };

  gpio17: gpio@e8a1c000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a1c000 0 0x1000>;
   interrupts = <0 101 4>;
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 48>;
   clock-names = "apb_pclk";
  };

  gpio18: gpio@ff3b4000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xff3b4000 0 0x1000>;
   interrupts = <0 102 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx2 0 0 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 49>;
   clock-names = "apb_pclk";
  };

  gpio19: gpio@ff3b5000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xff3b5000 0 0x1000>;
   interrupts = <0 103 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx2 0 8 4>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 50>;
   clock-names = "apb_pclk";
  };

  gpio20: gpio@e8a1f000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a1f000 0 0x1000>;
   interrupts = <0 104 4>;
   gpio-controller;
   #gpio-cells = <2>;
   gpio-ranges = <&pmx1 0 0 6>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&crg_ctrl 51>;
   clock-names = "apb_pclk";
  };

  gpio21: gpio@e8a20000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xe8a20000 0 0x1000>;
   interrupts = <0 105 4>;
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
   gpio-ranges = <&pmx3 0 0 6>;
   clocks = <&crg_ctrl 52>;
   clock-names = "apb_pclk";
  };

  gpio22: gpio@fff0b000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff0b000 0 0x1000>;
   interrupts = <0 106 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 2 0 6>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 0>;
   clock-names = "apb_pclk";
  };

  gpio23: gpio@fff0c000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff0c000 0 0x1000>;
   interrupts = <0 107 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 0 6 7>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 1>;
   clock-names = "apb_pclk";
  };

  gpio24: gpio@fff0d000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff0d000 0 0x1000>;
   interrupts = <0 108 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 0 13 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 2>;
   clock-names = "apb_pclk";
  };

  gpio25: gpio@fff0e000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff0e000 0 0x1000>;
   interrupts = <0 109 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 0 21 4 &pmx4 5 25 3>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 3>;
   clock-names = "apb_pclk";
  };

  gpio26: gpio@fff0f000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff0f000 0 0x1000>;
   interrupts = <0 110 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 0 28 8>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 4>;
   clock-names = "apb_pclk";
  };

  gpio27: gpio@fff10000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff10000 0 0x1000>;
   interrupts = <0 111 4>;
   gpio-controller;
   #gpio-cells = <2>;

   gpio-ranges = <&pmx4 0 36 6>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 5>;
   clock-names = "apb_pclk";
  };

  gpio28: gpio@fff1d000 {
   compatible = "arm,pl061", "arm,primecell";
   reg = <0 0xfff1d000 0 0x1000>;
   interrupts = <0 141 4>;
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
   clocks = <&sctrl 6>;
   clock-names = "apb_pclk";
  };

  spi2: spi@ffd68000 {
   compatible = "arm,pl022", "arm,primecell";
   reg = <0x0 0xffd68000 0x0 0x1000>;
   #address-cells = <1>;
   #size-cells = <0>;
   interrupts = <0 116 4>;
   clocks = <&crg_ctrl 25>, <&crg_ctrl 25>;
   clock-names = "sspclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&spi2_pmx_func &spi2_cfg_func>;
   num-cs = <1>;
   cs-gpios = <&gpio27 2 0>;
   status = "disabled";
  };

  spi3: spi@ff3b3000 {
   compatible = "arm,pl022", "arm,primecell";
   reg = <0x0 0xff3b3000 0x0 0x1000>;
   #address-cells = <1>;
   #size-cells = <0>;
   interrupts = <0 312 4>;
   clocks = <&crg_ctrl 53>, <&crg_ctrl 53>;
   clock-names = "sspclk", "apb_pclk";
   pinctrl-names = "default";
   pinctrl-0 = <&spi3_pmx_func &spi3_cfg_func>;
   num-cs = <1>;
   cs-gpios = <&gpio18 5 0>;
   status = "disabled";
  };

  pcie@f4000000 {
   compatible = "hisilicon,kirin960-pcie";
   reg = <0x0 0xf4000000 0x0 0x1000>,
         <0x0 0xff3fe000 0x0 0x1000>,
         <0x0 0xf3f20000 0x0 0x40000>,
         <0x0 0xf5000000 0x0 0x2000>;
   reg-names = "dbi", "apb", "phy", "config";
   bus-range = <0x0 0xff>;
   #address-cells = <3>;
   #size-cells = <2>;
   device_type = "pci";
   ranges = <0x02000000 0x0 0x00000000
      0x0 0xf6000000
      0x0 0x02000000>;
   num-lanes = <1>;
   #interrupt-cells = <1>;
   interrupts = <0 283 4>;
   interrupt-names = "msi";
   interrupt-map-mask = <0xf800 0 0 7>;
   interrupt-map = <0x0 0 0 1
      &gic 0 282 4>,
     <0x0 0 0 2
      &gic 0 283 4>,
     <0x0 0 0 3
      &gic 0 284 4>,
     <0x0 0 0 4
      &gic 0 285 4>;
   clocks = <&crg_ctrl 26>,
     <&crg_ctrl 82>,
     <&crg_ctrl 83>,
     <&crg_ctrl 81>,
     <&crg_ctrl 80>;
   clock-names = "pcie_phy_ref", "pcie_aux",
          "pcie_apb_phy", "pcie_apb_sys",
          "pcie_aclk";
   reset-gpios = <&gpio11 1 0 >;
  };


  ufs: ufs@ff3b0000 {
   compatible = "hisilicon,hi3660-ufs", "jedec,ufs-1.1";


   reg = <0x0 0xff3b0000 0x0 0x1000>,
    <0x0 0xff3b1000 0x0 0x1000>;
   interrupt-parent = <&gic>;
   interrupts = <0 278 4>;
   clocks = <&crg_ctrl 102>,
    <&crg_ctrl 101>;
   clock-names = "ref_clk", "phy_clk";
   freq-table-hz = <0 0>,
     <0 0>;

   resets = <&crg_rst 0x84 12>;
   reset-names = "rst";
  };


  dwmmc1: dwmmc1@ff37f000 {
   compatible = "hisilicon,hi3660-dw-mshc";
   reg = <0x0 0xff37f000 0x0 0x1000>;
   #address-cells = <1>;
   #size-cells = <0>;
   interrupts = <0 139 4>;
   clocks = <&crg_ctrl 75>,
    <&crg_ctrl 29>;
   clock-names = "ciu", "biu";
   clock-frequency = <3200000>;
   resets = <&crg_rst 0x94 18>;
   reset-names = "reset";
   hisilicon,peripheral-syscon = <&sctrl>;
   card-detect-delay = <200>;
   status = "disabled";
  };


  dwmmc2: dwmmc2@ff3ff000 {
   compatible = "hisilicon,hi3660-dw-mshc";
   reg = <0x0 0xff3ff000 0x0 0x1000>;
   #address-cells = <0x1>;
   #size-cells = <0x0>;
   interrupts = <0 140 4>;
   clocks = <&crg_ctrl 76>,
     <&crg_ctrl 28>;
   clock-names = "ciu", "biu";
   resets = <&crg_rst 0x94 20>;
   reset-names = "reset";
   card-detect-delay = <200>;
   status = "disabled";
  };

  watchdog0: watchdog@e8a06000 {
   compatible = "arm,sp805", "arm,primecell";
   reg = <0x0 0xe8a06000 0x0 0x1000>;
   interrupts = <0 44 4>;
   clocks = <&crg_ctrl 11>,
     <&crg_ctrl 11>;
   clock-names = "wdog_clk", "apb_pclk";
  };

  watchdog1: watchdog@e8a07000 {
   compatible = "arm,sp805", "arm,primecell";
   reg = <0x0 0xe8a07000 0x0 0x1000>;
   interrupts = <0 45 4>;
   clocks = <&crg_ctrl 11>,
     <&crg_ctrl 11>;
   clock-names = "wdog_clk", "apb_pclk";
  };

  tsensor: tsensor@fff30000 {
   compatible = "hisilicon,hi3660-tsensor";
   reg = <0x0 0xfff30000 0x0 0x1000>;
   interrupts = <0 145 4>;
   #thermal-sensor-cells = <1>;
  };

  thermal-zones {

   cls0: cls0-thermal {
    polling-delay = <1000>;
    polling-delay-passive = <100>;
    sustainable-power = <4500>;


    thermal-sensors = <&tsensor 1>;

    trips {
     threshold: trip-point0 {
      temperature = <65000>;
      hysteresis = <1000>;
      type = "passive";
     };

     target: trip-point1 {
      temperature = <75000>;
      hysteresis = <1000>;
      type = "passive";
     };
    };

    cooling-maps {
     map0 {
      trip = <&target>;
      contribution = <1024>;
      cooling-device = <&cpu0 (~0) (~0)>,
         <&cpu1 (~0) (~0)>,
         <&cpu2 (~0) (~0)>,
         <&cpu3 (~0) (~0)>;
     };
     map1 {
      trip = <&target>;
      contribution = <512>;
      cooling-device = <&cpu4 (~0) (~0)>,
         <&cpu5 (~0) (~0)>,
         <&cpu6 (~0) (~0)>,
         <&cpu7 (~0) (~0)>;
     };
    };
   };
  };

  usb3_otg_bc: usb3_otg_bc@ff200000 {
   compatible = "syscon", "simple-mfd";
   reg = <0x0 0xff200000 0x0 0x1000>;

   usb_phy: usb-phy {
    compatible = "hisilicon,hi3660-usb-phy";
    #phy-cells = <0>;
    hisilicon,pericrg-syscon = <&crg_ctrl>;
    hisilicon,pctrl-syscon = <&pctrl>;
    hisilicon,eye-diagram-param = <0x22466e4>;
   };
  };

  dwc3: usb@ff100000 {
   compatible = "snps,dwc3";
   reg = <0x0 0xff100000 0x0 0x100000>;

   clocks = <&crg_ctrl 27>,
     <&crg_ctrl 73>;
   clock-names = "ref", "bus_early";

   assigned-clocks = <&crg_ctrl 73>;
   assigned-clock-rates = <229000000>;

   resets = <&crg_rst 0x90 8>,
     <&crg_rst 0x90 7>,
     <&crg_rst 0x90 6>,
     <&crg_rst 0x90 5>;

   interrupts = <0 159 4>, <0 161 4>;
   phys = <&usb_phy>;
   phy-names = "usb3-phy";
  };
 };
};

# 1 "arch/arm64/boot/dts/hisilicon/hi3660-coresight.dtsi" 1
# 11 "arch/arm64/boot/dts/hisilicon/hi3660-coresight.dtsi"
/ {
 soc {

  etm@ecc40000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xecc40000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu0>;

   out-ports {
    port {
     etm0_out: endpoint {
      remote-endpoint =
       <&cluster0_funnel_in0>;
     };
    };
   };
  };

  etm@ecd40000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xecd40000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu1>;

   out-ports {
    port {
     etm1_out: endpoint {
      remote-endpoint =
       <&cluster0_funnel_in1>;
     };
    };
   };
  };

  etm@ece40000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xece40000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu2>;

   out-ports {
    port {
     etm2_out: endpoint {
      remote-endpoint =
       <&cluster0_funnel_in2>;
     };
    };
   };
  };

  etm@ecf40000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xecf40000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu3>;

   out-ports {
    port {
     etm3_out: endpoint {
      remote-endpoint =
       <&cluster0_funnel_in3>;
     };
    };
   };
  };

  funnel@ec801000 {
   compatible = "arm,coresight-dynamic-funnel", "arm,primecell";
   reg = <0 0xec801000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   out-ports {
    port {
     cluster0_funnel_out: endpoint {
      remote-endpoint =
       <&cluster0_etf_in>;
     };
    };
   };

   in-ports {
    #address-cells = <1>;
    #size-cells = <0>;

    port@0 {
     reg = <0>;
     cluster0_funnel_in0: endpoint {
      remote-endpoint = <&etm0_out>;
     };
    };

    port@1 {
     reg = <1>;
     cluster0_funnel_in1: endpoint {
      remote-endpoint = <&etm1_out>;
     };
    };

    port@2 {
     reg = <2>;
     cluster0_funnel_in2: endpoint {
      remote-endpoint = <&etm2_out>;
     };
    };

    port@3 {
     reg = <3>;
     cluster0_funnel_in3: endpoint {
      remote-endpoint = <&etm3_out>;
     };
    };
   };
  };

  etf@ec802000 {
   compatible = "arm,coresight-tmc", "arm,primecell";
   reg = <0 0xec802000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     cluster0_etf_in: endpoint {
      remote-endpoint =
       <&cluster0_funnel_out>;
     };
    };
   };

   out-ports {
    port {
     cluster0_etf_out: endpoint {
      remote-endpoint =
       <&combo_funnel_in0>;
     };
    };
   };
  };


  etm@ed440000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xed440000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu4>;

   out-ports {
    port {
     etm4_out: endpoint {
      remote-endpoint =
       <&cluster1_funnel_in0>;
     };
    };
   };
  };

  etm@ed540000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xed540000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu5>;

   out-ports {
    port {
     etm5_out: endpoint {
      remote-endpoint =
       <&cluster1_funnel_in1>;
     };
    };
   };
  };

  etm@ed640000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xed640000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu6>;

   out-ports {
    port {
     etm6_out: endpoint {
      remote-endpoint =
       <&cluster1_funnel_in2>;
     };
    };
   };
  };

  etm@ed740000 {
   compatible = "arm,coresight-etm4x", "arm,primecell";
   reg = <0 0xed740000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   cpu = <&cpu7>;

   out-ports {
    port {
     etm7_out: endpoint {
      remote-endpoint =
       <&cluster1_funnel_in3>;
     };
    };
   };
  };

  funnel@ed001000 {
   compatible = "arm,coresight-dynamic-funnel", "arm,primecell";
   reg = <0 0xed001000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";
   out-ports {
    port {
     cluster1_funnel_out: endpoint {
      remote-endpoint =
       <&cluster1_etf_in>;
     };
    };
   };

   in-ports {
    #address-cells = <1>;
    #size-cells = <0>;

    port@0 {
     reg = <0>;
     cluster1_funnel_in0: endpoint {
      remote-endpoint = <&etm4_out>;
     };
    };

    port@1 {
     reg = <1>;
     cluster1_funnel_in1: endpoint {
      remote-endpoint = <&etm5_out>;
     };
    };

    port@2 {
     reg = <2>;
     cluster1_funnel_in2: endpoint {
      remote-endpoint = <&etm6_out>;
     };
    };

    port@3 {
     reg = <3>;
     cluster1_funnel_in3: endpoint {
      remote-endpoint = <&etm7_out>;
     };
    };
   };
  };

  etf@ed002000 {
   compatible = "arm,coresight-tmc", "arm,primecell";
   reg = <0 0xed002000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     cluster1_etf_in: endpoint {
      remote-endpoint =
       <&cluster1_funnel_out>;
     };
    };
   };

   out-ports {
    port {
     cluster1_etf_out: endpoint {
      remote-endpoint =
       <&combo_funnel_in1>;
     };
    };
   };
  };


  funnel {
   compatible = "arm,coresight-static-funnel";
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   out-ports {
    port {
     combo_funnel_out: endpoint {
      remote-endpoint =
       <&top_funnel_in>;
     };
    };
   };

   in-ports {
    #address-cells = <1>;
    #size-cells = <0>;

    port@0 {
     reg = <0>;
     combo_funnel_in0: endpoint {
      remote-endpoint =
       <&cluster0_etf_out>;
     };
    };

    port@1 {
     reg = <1>;
     combo_funnel_in1: endpoint {
      remote-endpoint =
       <&cluster1_etf_out>;
     };
    };
   };
  };


  funnel@ec031000 {
   compatible = "arm,coresight-dynamic-funnel", "arm,primecell";
   reg = <0 0xec031000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   out-ports {
    port {
     top_funnel_out: endpoint {
      remote-endpoint =
       <&top_etf_in>;
     };
    };
   };

   in-ports {
    #address-cells = <1>;
    #size-cells = <0>;

    port@0 {
     reg = <0>;
     top_funnel_in: endpoint {
      remote-endpoint =
       <&combo_funnel_out>;
     };
    };
   };
  };

  etf@ec036000 {
   compatible = "arm,coresight-tmc", "arm,primecell";
   reg = <0 0xec036000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     top_etf_in: endpoint {
      remote-endpoint =
       <&top_funnel_out>;
     };
    };
   };

   out-ports {
    port {
     top_etf_out: endpoint {
      remote-endpoint =
       <&replicator_in>;
     };
    };
   };
  };

  replicator {
   compatible = "arm,coresight-static-replicator";
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     replicator_in: endpoint {
      remote-endpoint =
       <&top_etf_out>;
     };
    };
   };

   out-ports {
    #address-cells = <1>;
    #size-cells = <0>;

    port@0 {
     reg = <0>;
     replicator0_out0: endpoint {
      remote-endpoint = <&etr_in>;
     };
    };

    port@1 {
     reg = <1>;
     replicator0_out1: endpoint {
      remote-endpoint = <&tpiu_in>;
     };
    };
   };
  };

  etr@ec033000 {
   compatible = "arm,coresight-tmc", "arm,primecell";
   reg = <0 0xec033000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     etr_in: endpoint {
      remote-endpoint =
       <&replicator0_out0>;
     };
    };
   };
  };

  tpiu@ec032000 {
   compatible = "arm,coresight-tpiu", "arm,primecell";
   reg = <0 0xec032000 0 0x1000>;
   clocks = <&crg_ctrl 8>;
   clock-names = "apb_pclk";

   in-ports {
    port {
     tpiu_in: endpoint {
      remote-endpoint =
       <&replicator0_out1>;
     };
    };
   };
  };
 };
};
# 1195 "arch/arm64/boot/dts/hisilicon/hi3660.dtsi" 2
# 12 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts" 2
# 1 "arch/arm64/boot/dts/hisilicon/hikey960-pinctrl.dtsi" 1






# 1 "./scripts/dtc/include-prefixes/dt-bindings/pinctrl/hisi.h" 1
# 8 "arch/arm64/boot/dts/hisilicon/hikey960-pinctrl.dtsi" 2

/ {
 soc {

  range: gpio-range {
   #pinctrl-single,gpio-range-cells = <3>;
  };

  pmx0: pinmux@e896c000 {
   compatible = "pinctrl-single";
   reg = <0x0 0xe896c000 0x0 0x1f0>;
   #pinctrl-cells = <1>;
   #gpio-range-cells = <0x3>;
   pinctrl-single,register-width = <0x20>;
   pinctrl-single,function-mask = <0x7>;

   pinctrl-single,gpio-range = <
    &range 0 7 0
    &range 8 116 0>;

   pmu_pmx_func: pmu_pmx_func {
    pinctrl-single,pins = <
     0x008 1
     0x00c 1
     0x010 1
     0x100 1
    >;
   };

   csi0_pwd_n_pmx_func: csi0_pwd_n_pmx_func {
    pinctrl-single,pins = <
     0x044 0
    >;
   };

   csi1_pwd_n_pmx_func: csi1_pwd_n_pmx_func {
    pinctrl-single,pins = <
     0x04c 0
    >;
   };

   isp0_pmx_func: isp0_pmx_func {
    pinctrl-single,pins = <
     0x058 1
     0x064 1
     0x068 1
    >;
   };

   isp1_pmx_func: isp1_pmx_func {
    pinctrl-single,pins = <
     0x05c 1
     0x06c 1
     0x070 1
    >;
   };

   pwr_key_pmx_func: pwr_key_pmx_func {
    pinctrl-single,pins = <
     0x080 0
    >;
   };

   i2c3_pmx_func: i2c3_pmx_func {
    pinctrl-single,pins = <
     0x02c 1
     0x030 1
    >;
   };

   i2c4_pmx_func: i2c4_pmx_func {
    pinctrl-single,pins = <
     0x090 1
     0x094 1
    >;
   };

   pcie_perstn_pmx_func: pcie_perstn_pmx_func {
    pinctrl-single,pins = <
     0x15c 1
    >;
   };

   usbhub5734_pmx_func: usbhub5734_pmx_func {
    pinctrl-single,pins = <
     0x11c 0
     0x120 0
    >;
   };

   uart0_pmx_func: uart0_pmx_func {
    pinctrl-single,pins = <
     0x0cc 2
     0x0d0 2
    >;
   };

   uart1_pmx_func: uart1_pmx_func {
    pinctrl-single,pins = <
     0x0b0 2
     0x0b4 2
     0x0a8 2
     0x0ac 2
    >;
   };

   uart2_pmx_func: uart2_pmx_func {
    pinctrl-single,pins = <
     0x0bc 2
     0x0c0 2
     0x0c8 2
     0x0c4 2
    >;
   };

   uart3_pmx_func: uart3_pmx_func {
    pinctrl-single,pins = <
     0x0dc 1
     0x0e0 1
     0x0e4 1
     0x0e8 1
    >;
   };

   uart4_pmx_func: uart4_pmx_func {
    pinctrl-single,pins = <
     0x0ec 1
     0x0f0 1
     0x0f4 1
     0x0f8 1
    >;
   };

   uart5_pmx_func: uart5_pmx_func {
    pinctrl-single,pins = <
     0x0c4 3
     0x0c8 3
     0x0bc 3
     0x0c0 3
    >;
   };

   uart6_pmx_func: uart6_pmx_func {
    pinctrl-single,pins = <
     0x0cc 1
     0x0d0 1
     0x0d4 1
     0x0d8 1
    >;
   };

   cam0_rst_pmx_func: cam0_rst_pmx_func {
    pinctrl-single,pins = <
     0x0c8 0
    >;
   };

   cam1_rst_pmx_func: cam1_rst_pmx_func {
    pinctrl-single,pins = <
     0x124 0
    >;
   };
  };


  pmx1: pinmux@ff37e000 {
   compatible = "pinctrl-single";
   reg = <0x0 0xff37e000 0x0 0x18>;
   #gpio-range-cells = <0x3>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;
   pinctrl-single,function-mask = <0x7>;

   pinctrl-single,gpio-range = <&range 0 6 0>;

   sd_pmx_func: sd_pmx_func {
    pinctrl-single,pins = <
     0x000 1
     0x004 1
     0x008 1
     0x00c 1
     0x010 1
     0x014 1
    >;
   };
  };


  pmx2: pinmux@ff3b6000 {
   compatible = "pinctrl-single";
   reg = <0x0 0xff3b6000 0x0 0x30>;
   #pinctrl-cells = <1>;
   #gpio-range-cells = <0x3>;
   pinctrl-single,register-width = <0x20>;
   pinctrl-single,function-mask = <0x7>;

   pinctrl-single,gpio-range = <&range 0 12 0>;

   ufs_pmx_func: ufs_pmx_func {
    pinctrl-single,pins = <
     0x000 1
     0x004 1
    >;
   };

   spi3_pmx_func: spi3_pmx_func {
    pinctrl-single,pins = <
     0x008 1
     0x00c 1
     0x010 1
     0x014 1
    >;
   };
  };


  pmx3: pinmux@ff3fd000 {
   compatible = "pinctrl-single";
   reg = <0x0 0xff3fd000 0x0 0x18>;
   #pinctrl-cells = <1>;
   #gpio-range-cells = <0x3>;
   pinctrl-single,register-width = <0x20>;
   pinctrl-single,function-mask = <0x7>;

   pinctrl-single,gpio-range = <&range 0 6 0>;

   sdio_pmx_func: sdio_pmx_func {
    pinctrl-single,pins = <
     0x000 1
     0x004 1
     0x008 1
     0x00c 1
     0x010 1
     0x014 1
    >;
   };
  };


  pmx4: pinmux@fff11000 {
   compatible = "pinctrl-single";
   reg = <0x0 0xfff11000 0x0 0xa8>;
   #pinctrl-cells = <1>;
   #gpio-range-cells = <0x3>;
   pinctrl-single,register-width = <0x20>;
   pinctrl-single,function-mask = <0x7>;

   pinctrl-single,gpio-range = <&range 0 42 0>;

   i2s2_pmx_func: i2s2_pmx_func {
    pinctrl-single,pins = <
     0x044 1
     0x048 1
     0x04c 1
     0x050 1
    >;
   };

   slimbus_pmx_func: slimbus_pmx_func {
    pinctrl-single,pins = <
     0x02c 1
     0x030 1
    >;
   };

   i2c0_pmx_func: i2c0_pmx_func {
    pinctrl-single,pins = <
     0x014 1
     0x018 1
    >;
   };

   i2c1_pmx_func: i2c1_pmx_func {
    pinctrl-single,pins = <
     0x01c 1
     0x020 1
    >;
   };

   i2c7_pmx_func: i2c7_pmx_func {
    pinctrl-single,pins = <
     0x024 3
     0x028 3
    >;
   };

   pcie_pmx_func: pcie_pmx_func {
    pinctrl-single,pins = <
     0x084 1
     0x088 1
    >;
   };

   spi2_pmx_func: spi2_pmx_func {
    pinctrl-single,pins = <
     0x08c 1
     0x090 1
     0x094 1
     0x098 1
    >;
   };

   i2s0_pmx_func: i2s0_pmx_func {
    pinctrl-single,pins = <
     0x034 1
     0x038 1
     0x03c 1
     0x040 1
    >;
   };
  };

  pmx5: pinmux@e896c800 {
   compatible = "pinconf-single";
   reg = <0x0 0xe896c800 0x0 0x200>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;

   pmu_cfg_func: pmu_cfg_func {
    pinctrl-single,pins = <
     0x010 0x0
     0x014 0x0
     0x018 0x0
     0x10c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (2 << 4) (15 << 4)
    >;
   };

   i2c3_cfg_func: i2c3_cfg_func {
    pinctrl-single,pins = <
     0x038 0x0
     0x03c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   csi0_pwd_n_cfg_func: csi0_pwd_n_cfg_func {
    pinctrl-single,pins = <
     0x050 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)
    >;
   };

   csi1_pwd_n_cfg_func: csi1_pwd_n_cfg_func {
    pinctrl-single,pins = <
     0x058 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)
    >;
   };

   isp0_cfg_func: isp0_cfg_func {
    pinctrl-single,pins = <
     0x064 0x0
     0x070 0x0
     0x074 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)>;
   };

   isp1_cfg_func: isp1_cfg_func {
    pinctrl-single,pins = <
     0x068 0x0
     0x078 0x0
     0x07c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)
    >;
   };

   pwr_key_cfg_func: pwr_key_cfg_func {
    pinctrl-single,pins = <
     0x08c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart1_cfg_func: uart1_cfg_func {
    pinctrl-single,pins = <
     0x0b4 0x0
     0x0b8 0x0
     0x0bc 0x0
     0x0c0 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart2_cfg_func: uart2_cfg_func {
    pinctrl-single,pins = <
     0x0c8 0x0
     0x0cc 0x0
     0x0d0 0x0
     0x0d4 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart5_cfg_func: uart5_cfg_func {
    pinctrl-single,pins = <
     0x0c8 0x0
     0x0cc 0x0
     0x0d0 0x0
     0x0d4 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   cam0_rst_cfg_func: cam0_rst_cfg_func {
    pinctrl-single,pins = <
     0x0d4 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)
    >;
   };

   uart0_cfg_func: uart0_cfg_func {
    pinctrl-single,pins = <
     0x0d8 0x0
     0x0dc 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart6_cfg_func: uart6_cfg_func {
    pinctrl-single,pins = <
     0x0d8 0x0
     0x0dc 0x0
     0x0e0 0x0
     0x0e4 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart3_cfg_func: uart3_cfg_func {
    pinctrl-single,pins = <
     0x0e8 0x0
     0x0ec 0x0
     0x0f0 0x0
     0x0f4 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   uart4_cfg_func: uart4_cfg_func {
    pinctrl-single,pins = <
     0x0f8 0x0
     0x0fc 0x0
     0x100 0x0
     0x104 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   cam1_rst_cfg_func: cam1_rst_cfg_func {
    pinctrl-single,pins = <
     0x130 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (1 << 4) (15 << 4)
    >;
   };
  };

  pmx6: pinmux@ff3b6800 {
   compatible = "pinconf-single";
   reg = <0x0 0xff3b6800 0x0 0x18>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;

   ufs_cfg_func: ufs_cfg_func {
    pinctrl-single,pins = <
     0x000 0x0
     0x004 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (3 << 4) (15 << 4)
    >;
   };

   spi3_cfg_func: spi3_cfg_func {
    pinctrl-single,pins = <
     0x008 0x0
     0x00c 0x0
     0x010 0x0
     0x014 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (2 << 4) (15 << 4)
    >;
   };
  };

  pmx7: pinmux@ff3fd800 {
   compatible = "pinconf-single";
   reg = <0x0 0xff3fd800 0x0 0x18>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;

   sdio_clk_cfg_func: sdio_clk_cfg_func {
    pinctrl-single,pins = <
     0x000 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (15 << 4) (15 << 4)
    >;
   };

   sdio_cfg_func: sdio_cfg_func {
    pinctrl-single,pins = <
     0x004 0x0
     0x008 0x0
     0x00c 0x0
     0x010 0x0
     0x014 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (8 << 4) (15 << 4)
    >;
   };
  };

  pmx8: pinmux@ff37e800 {
   compatible = "pinconf-single";
   reg = <0x0 0xff37e800 0x0 0x18>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;

   sd_clk_cfg_func: sd_clk_cfg_func {
    pinctrl-single,pins = <
     0x000 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (15 << 4)
     (15 << 4)
    >;
   };

   sd_cfg_func: sd_cfg_func {
    pinctrl-single,pins = <
     0x004 0x0
     0x008 0x0
     0x00c 0x0
     0x010 0x0
     0x014 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (8 << 4)
     (15 << 4)
    >;
   };
  };

  pmx9: pinmux@fff11800 {
   compatible = "pinconf-single";
   reg = <0x0 0xfff11800 0x0 0xbc>;
   #pinctrl-cells = <1>;
   pinctrl-single,register-width = <0x20>;

   i2c0_cfg_func: i2c0_cfg_func {
    pinctrl-single,pins = <
     0x01c 0x0
     0x020 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   i2c1_cfg_func: i2c1_cfg_func {
    pinctrl-single,pins = <
     0x024 0x0
     0x028 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   i2c7_cfg_func: i2c7_cfg_func {
    pinctrl-single,pins = <
     0x02c 0x0
     0x030 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   slimbus_cfg_func: slimbus_cfg_func {
    pinctrl-single,pins = <
     0x034 0x0
     0x038 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   i2s0_cfg_func: i2s0_cfg_func {
    pinctrl-single,pins = <
     0x040 0x0
     0x044 0x0
     0x048 0x0
     0x04c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   i2s2_cfg_func: i2s2_cfg_func {
    pinctrl-single,pins = <
     0x050 0x0
     0x054 0x0
     0x058 0x0
     0x05c 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   pcie_cfg_func: pcie_cfg_func {
    pinctrl-single,pins = <
     0x094 0x0
     0x098 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };

   spi2_cfg_func: spi2_cfg_func {
    pinctrl-single,pins = <
     0x09c 0x0
     0x0a0 0x0
     0x0a4 0x0
     0x0a8 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (2 << 4) (15 << 4)
    >;
   };

   usb_cfg_func: usb_cfg_func {
    pinctrl-single,pins = <
     0x0ac 0x0
    >;
    pinctrl-single,bias-pulldown = <
     (0)
     (1 << 1)
     (0)
     (1 << 1)
    >;
    pinctrl-single,bias-pullup = <
     (1 << 0)
     (1 << 0)
     (0)
     (1 << 0)
    >;
    pinctrl-single,drive-strength = <
     (0 << 4) (15 << 4)
    >;
   };
  };
 };
};
# 13 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/gpio/gpio.h" 1
# 14 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts" 2
# 1 "./scripts/dtc/include-prefixes/dt-bindings/input/input.h" 1
# 13 "./scripts/dtc/include-prefixes/dt-bindings/input/input.h"
# 1 "./scripts/dtc/include-prefixes/dt-bindings/input/linux-event-codes.h" 1
# 14 "./scripts/dtc/include-prefixes/dt-bindings/input/input.h" 2
# 15 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts" 2

# 1 "./scripts/dtc/include-prefixes/dt-bindings/usb/pd.h" 1
# 17 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts" 2

/ {
 model = "HiKey960";
 compatible = "hisilicon,hi3660-hikey960", "hisilicon,hi3660";

 aliases {
  mshc1 = &dwmmc1;
  mshc2 = &dwmmc2;
  serial0 = &uart0;
  serial1 = &uart1;
  serial2 = &uart2;
  serial3 = &uart3;
  serial4 = &uart4;
  serial5 = &uart5;
  serial6 = &uart6;
 };

 chosen {
  stdout-path = "serial6:115200n8";
 };

 memory@0 {
  device_type = "memory";

  reg = <0x0 0x0 0x0 0x0>;
 };

 reserved-memory {
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  ramoops@32000000 {
   compatible = "ramoops";
   reg = <0x0 0x32000000 0x0 0x00100000>;
   record-size = <0x00020000>;
   console-size = <0x00020000>;
   ftrace-size = <0x00020000>;
  };
 };

 reboot-mode-syscon@32100000 {
  compatible = "syscon", "simple-mfd";
  reg = <0x0 0x32100000 0x0 0x00001000>;

  reboot-mode {
   compatible = "syscon-reboot-mode";
   offset = <0x0>;

   mode-normal = <0x77665501>;
   mode-bootloader = <0x77665500>;
   mode-recovery = <0x77665502>;
  };
 };

 keys {
  compatible = "gpio-keys";
  pinctrl-names = "default";
  pinctrl-0 = <&pwr_key_pmx_func &pwr_key_cfg_func>;

  key-power {
   wakeup-source;
   gpios = <&gpio4 2 1>;
   label = "GPIO Power";
   linux,code = <116>;
  };
 };

 leds {
  compatible = "gpio-leds";

  user_led1 {
   label = "green:user1";

   gpios = <&gpio18 6 0>;
   linux,default-trigger = "heartbeat";
  };

  user_led2 {
   label = "green:user2";

   gpios = <&gpio18 7 0>;
   linux,default-trigger = "none";
  };

  user_led3 {
   label = "green:user3";

   gpios = <&gpio23 5 0>;
   linux,default-trigger = "mmc0";
  };

  user_led4 {
   label = "green:user4";

   gpios = <&gpio23 6 0>;
   panic-indicator;
   linux,default-trigger = "none";
  };

  wlan_active_led {
   label = "yellow:wlan";

   gpios = <&gpio25 5 0>;
   linux,default-trigger = "phy0tx";
   default-state = "off";
  };

  bt_active_led {
   label = "blue:bt";
   gpios = <&gpio25 7 0>;

   linux,default-trigger = "hci0-power";
   default-state = "off";
  };
 };

 pmic: pmic@fff34000 {
  compatible = "hisilicon,hi6421v530-pmic";
  reg = <0x0 0xfff34000 0x0 0x1000>;
  interrupt-controller;
  #interrupt-cells = <2>;

  regulators {
   ldo3: LDO3 {
    regulator-name = "VOUT3_1V85";
    regulator-min-microvolt = <1800000>;
    regulator-max-microvolt = <2200000>;
    regulator-enable-ramp-delay = <120>;
   };

   ldo9: LDO9 {
    regulator-name = "VOUT9_1V8_2V95";
    regulator-min-microvolt = <1750000>;
    regulator-max-microvolt = <3300000>;
    regulator-enable-ramp-delay = <240>;
   };

   ldo11: LDO11 {
    regulator-name = "VOUT11_1V8_2V95";
    regulator-min-microvolt = <1750000>;
    regulator-max-microvolt = <3300000>;
    regulator-enable-ramp-delay = <240>;
   };

   ldo15: LDO15 {
    regulator-name = "VOUT15_3V0";
    regulator-min-microvolt = <1750000>;
    regulator-max-microvolt = <3000000>;
    regulator-boot-on;
    regulator-always-on;
    regulator-enable-ramp-delay = <120>;
   };

   ldo16: LDO16 {
    regulator-name = "VOUT16_2V95";
    regulator-min-microvolt = <1750000>;
    regulator-max-microvolt = <3000000>;
    regulator-enable-ramp-delay = <360>;
   };
  };
 };

 wlan_en: wlan-en-1-8v {
  compatible = "regulator-fixed";
  regulator-name = "wlan-en-regulator";
  regulator-min-microvolt = <1800000>;
  regulator-max-microvolt = <1800000>;


  gpio = <&gpio6 3 0>;


  startup-delay-us = <70000>;
  enable-active-high;
 };

 firmware {
  optee {
   compatible = "linaro,optee-tz";
   method = "smc";
  };
 };
};
# 228 "arch/arm64/boot/dts/hisilicon/hi3660-hikey960.dts"
&gpio0 {

 gpio-line-names =
  "",
  "TP901",
  "[PMU0_SSI]",
  "[PMU1_SSI]",
  "[PMU2_SSI]",
  "[PMU0_CLKOUT]",
  "[JTAG_TCK]",
  "[JTAG_TMS]";
};

&gpio1 {

 gpio-line-names =
  "[JTAG_TRST_N]",
  "[JTAG_TDI]",
  "[JTAG_TDO]",
  "NC", "NC",
  "[I2C3_SCL]",
  "[I2C3_SDA]",
  "NC";
};

&gpio2 {

 gpio-line-names =
  "NC", "NC", "NC",
  "GPIO-J",
  "GPIO_020_HDMI_SEL",
  "GPIO-L",
  "GPIO_022_UFSBUCK_INT_N",
  "GPIO-G";
};

&gpio3 {


 gpio-line-names =
  "[CSI0_MCLK]",
  "[CSI1_MCLK]",
  "NC",
  "[I2C2_SCL]",
  "[I2C2_SDA]",
  "[I2C3_SCL]",
  "[I2C3_SDA]",
  "NC";
};

&gpio4 {

 gpio-line-names =
  "NC", "NC",
  "PWR_BTN_N",
  "GPIO_035_PMU2_EN",
  "GPIO_036_USB_HUB_RESET",
  "NC", "NC", "NC";
};

&gpio5 {

 gpio-line-names =
  "GPIO-H",
  "GPIO_041_HDMI_PD",
  "TP904",
  "TP905",
  "NC", "NC",
  "GPIO_046_HUB_VDD33_EN",
  "GPIO_047_PMU1_EN";
};

&gpio6 {

 gpio-line-names =
  "NC", "NC", "NC",
  "GPIO_051_WIFI_EN",
  "GPIO-I",





  "[SD_DAT1]",
  "[SD_DAT2]",
  "[UART1_RXD]";
};

&gpio7 {

 gpio-line-names =
  "[UART1_TXD]",
  "[UART0_CTS]",
  "[UART0_RTS]",
  "[UART0_RXD]",
  "[UART0_TXD]",
  "[SOC_BT_UART4_CTS_N]",
  "[SOC_BT_UART4_RTS_N]",
  "[SOC_BT_UART4_RXD]";
};

&gpio8 {

 gpio-line-names =
  "[SOC_BT_UART4_TXD]",
  "NC",
  "[PMU_HKADC_SSI]",
  "NC",
  "GPIO_068_SEL",
  "NC", "NC", "NC";

};

&gpio9 {

 gpio-line-names =
  "NC", "NC", "NC",
  "GPIO-K",
  "NC", "NC", "NC", "NC";
};

&gpio10 {

 gpio-line-names = "NC", "NC", "NC", "NC", "NC", "NC", "NC", "NC";
};

&gpio11 {

 gpio-line-names =
  "NC",
  "[PCIE_PERST_N]",
  "NC", "NC", "NC", "NC", "NC", "NC";
};

&gpio12 {

 gpio-line-names = "NC", "NC", "NC", "", "", "", "", "NC";
};

&gpio13 {

 gpio-line-names = "NC", "NC", "NC", "NC", "NC", "NC", "NC", "NC";
};

&gpio14 {

 gpio-line-names = "NC", "NC", "NC", "NC", "NC", "NC", "NC", "NC";
};

&gpio15 {

 gpio-line-names =
  "NC", "NC", "NC", "NC", "NC", "NC",
  "GPIO_126_BT_EN",
  "TP902";
};

&gpio16 {

 gpio-line-names = "", "", "", "", "", "", "", "";
};

&gpio17 {

 gpio-line-names = "", "", "", "", "", "", "", "";
};

&gpio18 {

 gpio-line-names =
  "[UFS_REF_CLK]",
  "[UFS_RST_N]",
  "[SPI1_SCLK]",
  "[SPI1_DIN]",
  "[SPI1_DOUT]",
  "[SPI1_CS]",
  "GPIO_150_USER_LED1",
  "GPIO_151_USER_LED2";
};

&gpio19 {

 gpio-line-names = "NC", "NC", "NC", "NC", "", "", "", "";
};

&gpio20 {

 gpio-line-names =
  "[SD_CLK]",
  "[SD_CMD]",
  "[SD_DATA0]",
  "[SD_DATA1]",
  "[SD_DATA2]",
  "[SD_DATA3]",
  "", "";
};

&gpio21 {

 gpio-line-names =
  "[WL_SDIO_CLK]",
  "[WL_SDIO_CMD]",
  "[WL_SDIO_DATA0]",
  "[WL_SDIO_DATA1]",
  "[WL_SDIO_DATA2]",
  "[WL_SDIO_DATA3]",
  "", "";
};

&gpio22 {

 gpio-line-names =
  "[GPIO_176_PMU_PWR_HOLD]",
  "NA",
  "[SYSCLK_EN]",
  "GPIO_179_WL_WAKEUP_AP",
  "GPIO_180_HDMI_INT",
  "NA",
  "GPIO-F",
  "[I2C0_SCL]";
};

&gpio23 {

 gpio-line-names =
  "[I2C0_SDA]",
  "[I2C1_SCL]",
  "[I2C1_SDA]",
  "[I2C1_SCL]",
  "[I2C1_SDA]",
  "GPIO_189_USER_LED3",
  "GPIO_190_USER_LED4",
  "";
};

&gpio24 {

 gpio-line-names =
  "[PCM_DI]",
  "[PCM_DO]",
  "[PCM_CLK]",
  "[PCM_FS]",
  "[GPIO_196_I2S2_DI]",
  "[GPIO_197_I2S2_DO]",
  "[GPIO_198_I2S2_XCLK]",
  "[GPIO_199_I2S2_XFS]";
};

&gpio25 {

 gpio-line-names =
  "NC",
  "NC",
  "GPIO_202_VBUS_TYPEC",
  "GPIO_203_SD_DET",
  "GPIO_204_PMU12_IRQ_N",
  "GPIO_205_WIFI_ACTIVE",
  "GPIO_206_USBSW_SEL",
  "GPIO_207_BT_ACTIVE";
};

&gpio26 {

 gpio-line-names =
  "GPIO-A",
  "GPIO-B",
  "GPIO-C",
  "GPIO-D",
  "GPIO-E",
  "[PCIE_CLKREQ_N]",
  "[PCIE_WAKE_N]",
  "[SPI0_CLK]";
};

&gpio27 {

 gpio-line-names =
  "[SPI0_DIN]",
  "[SPI0_DOUT]",
  "[SPI0_CS]",
  "GPIO_219_CC_INT",
  "NC",
  "NC",
  "[PMU_INT]",
  "";
};

&gpio28 {

 gpio-line-names =
  "", "", "", "", "", "", "", "";
};

&i2c0 {

 label = "LS-I2C0";
 status = "okay";
};

&i2c1 {
 status = "okay";

 rt1711h: rt1711h@4e {
  compatible = "richtek,rt1711h";
  reg = <0x4e>;
  status = "okay";
  interrupt-parent = <&gpio27>;
  interrupts = <3 8>;
  pinctrl-names = "default";
  pinctrl-0 = <&usb_cfg_func>;

  usb_con: connector {
   compatible = "usb-c-connector";
   label = "USB-C";
   data-role = "dual";
   power-role = "dual";
   try-power-role = "sink";
   source-pdos = <(((0) << 30) | ((1 << 26)) | ((((5000) / 50) & 0x3ff) << 10) | ((((500) / 10) & 0x3ff) << 0))>;
   sink-pdos = <(((0) << 30) | ((1 << 26)) | ((((5000) / 50) & 0x3ff) << 10) | ((((500) / 10) & 0x3ff) << 0))
    (((2) << 30) | ((((5000) / 50) & 0x3ff) << 10) | ((((5000) / 50) & 0x3ff) << 20) | ((((1000) / 10) & 0x3ff) << 0))>;
   op-sink-microwatt = <10000000>;

   ports {
    #address-cells = <1>;
    #size-cells = <0>;
    port@1 {
     reg = <1>;
     usb_con_ss: endpoint {
      remote-endpoint = <&dwc3_ss>;
     };
    };
   };
  };
  port {
   #address-cells = <1>;
   #size-cells = <0>;

   rt1711h_ep: endpoint@0 {
    reg = <0>;
    remote-endpoint = <&dwc3_role_switch>;
   };
  };
 };

 adv7533: adv7533@39 {
  status = "okay";
  compatible = "adi,adv7533";
  reg = <0x39>;
  adi,dsi-lanes = <4>;
  ports {
   #address-cells = <1>;
   #size-cells = <0>;
   port@0 {
    reg = <0>;
   };
   port@1 {
    reg = <1>;
   };
  };
 };
};

&i2c7 {

 label = "LS-I2C1";
 status = "okay";
};

&uart3 {

 label = "LS-UART0";
 status = "okay";
};

&uart4 {
 status = "okay";

 bluetooth {
  compatible = "ti,wl1837-st";
  enable-gpios = <&gpio15 6 0>;
  max-speed = <3000000>;
 };
};

&uart6 {

 label = "LS-UART1";
 status = "okay";
};

&spi2 {

 label = "LS-SPI0";
 status = "okay";
};

&spi3 {

 label = "HS-SPI1";
 status = "okay";
};

&dwmmc1 {
 bus-width = <0x4>;
 cap-sd-highspeed;
 sd-uhs-sdr12;
 sd-uhs-sdr25;
 sd-uhs-sdr50;
 sd-uhs-sdr104;
 disable-wp;
 cd-gpios = <&gpio25 3 1>;
 pinctrl-names = "default";
 pinctrl-0 = <&sd_pmx_func
       &sd_clk_cfg_func
       &sd_cfg_func>;
 vmmc-supply = <&ldo16>;
 vqmmc-supply = <&ldo9>;
 status = "okay";
};

&dwmmc2 {
 bus-width = <0x4>;
 non-removable;
 broken-cd;
 cap-power-off-card;
 pinctrl-names = "default";
 pinctrl-0 = <&sdio_pmx_func
       &sdio_clk_cfg_func
       &sdio_cfg_func>;

 vmmc-supply = <&wlan_en>;
 status = "okay";

 wlcore: wlcore@2 {
  compatible = "ti,wl1837";
  reg = <2>;

  interrupt-parent = <&gpio22>;
  interrupts = <3 1>;
 };
};

&dwc3 {
 dr_mode = "otg";
 maximum-speed = "super-speed";
 phy_type = "utmi";
 snps,dis-del-phy-power-chg-quirk;
 snps,lfps_filter_quirk;
 snps,dis_u2_susphy_quirk;
 snps,dis_u3_susphy_quirk;
 snps,tx_de_emphasis_quirk;
 snps,tx_de_emphasis = <1>;
 snps,dis_enblslpm_quirk;
 snps,gctl-reset-quirk;
 usb-role-switch;
 role-switch-default-mode = "host";
 port {
  #address-cells = <1>;
  #size-cells = <0>;
  dwc3_role_switch: endpoint@0 {
   reg = <0>;
   remote-endpoint = <&rt1711h_ep>;
  };

  dwc3_ss: endpoint@1 {
   reg = <1>;
   remote-endpoint = <&usb_con_ss>;
  };
 };
};
